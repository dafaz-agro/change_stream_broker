// AUTO-GENERATED FILE - DO NOT EDIT
// Generated from change-stream/config.ts and change-stream/message-payload.schema.ts

import { ChangeStreamBroker } from '@dafaz/change-stream-broker';
import { Document } from 'mongodb';

// ==============================================
// INTERFACES FROM SCHEMA
// ==============================================
{{#each interfaces}}
export interface {{this}} extends Document {}
{{/each}}

// ==============================================
// MESSAGE PAYLOAD MAPPING  
// ==============================================
export interface MessagePayloads {
{{#each payloadMappings}}
  '{{topic}}': {{interface}};
{{/each}}
  [topic: string]: Document;
}

// ==============================================
// BROKER INSTANCE & CONFIGURATION
// ==============================================
const brokerConfig = {
  mongoUri: process.env.MONGODB_BROKER_URI,
  database: process.env.MONGODB_BROKER_DATABASE,
  autoCreateTopics: true,
  logLevel: 'INFO', 
  logContext: 'ChangeStreamBroker'
};

export const broker = new ChangeStreamBroker(brokerConfig);

// ==============================================
// PRE-CONFIGURED COMPONENTS
// ==============================================
{{#each topics}}
export const {{this}} = '{{this}}';
{{/each}}

{{#each producers}} 
export const {{this}} = broker.getProducer('{{this}}');
{{/each}}

{{#each consumers}}
export const {{this}} = broker.getConsumer('{{this}}');
{{/each}}

// ==============================================
// HELPER METHODS
// ==============================================
export async function connectBroker(): Promise<void> {
  await broker.connect();
}

export async function disconnectBroker(): Promise<void> {
  await broker.disconnect();
}

export default broker;